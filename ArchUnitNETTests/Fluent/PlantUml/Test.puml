@startuml
package ArchUnitNET {
package Loader {
[LoadTasks] as ArchUnitNET.Loader.LoadTasks
}
}

package ArchUnitNET {
package Fluent {
package Syntax {
[Elements] as ArchUnitNET.Fluent.Syntax.Elements
}
}
}

package ArchUnitNET {
package Fluent {
[Slices] as ArchUnitNET.Fluent.Slices
}
}

package ArchUnitNET {
package Fluent {
[Predicates] as ArchUnitNET.Fluent.Predicates
}
}

package ArchUnitNET {
package Fluent {
[PlantUml] as ArchUnitNET.Fluent.PlantUml
}
}

package ArchUnitNET {
package Fluent {
[Freeze] as ArchUnitNET.Fluent.Freeze
}
}

package ArchUnitNET {
package Fluent {
[Extensions] as ArchUnitNET.Fluent.Extensions
}
}

package ArchUnitNET {
package Fluent {
[Exceptions] as ArchUnitNET.Fluent.Exceptions
}
}

package ArchUnitNET {
package Fluent {
[Conditions] as ArchUnitNET.Fluent.Conditions
}
}

package ArchUnitNET {
package Domain {
package PlantUml {
[Import] as ArchUnitNET.Domain.PlantUml.Import
}
}
}

package ArchUnitNET {
package Domain {
package PlantUml {
[Export] as ArchUnitNET.Domain.PlantUml.Export
}
}
}

package ArchUnitNET {
package Domain {
package PlantUml {
[Exceptions] as ArchUnitNET.Domain.PlantUml.Exceptions
}
}
}

package ArchUnitNET {
package Domain {
[Extensions] as ArchUnitNET.Domain.Extensions
}
}

package ArchUnitNET {
package Domain {
[Exceptions] as ArchUnitNET.Domain.Exceptions
}
}

package ArchUnitNET {
package Domain {
[Dependencies] as ArchUnitNET.Domain.Dependencies
}
}

Loader -[#blue]> [ArchUnitNET.Domain.Exceptions]
[ArchUnitNET.Loader.LoadTasks] --|> [ArchUnitNET.Domain.Extensions]
[ArchUnitNET.Loader.LoadTasks] --|> [ArchUnitNET.Domain.Dependencies]
[ArchUnitNET.Fluent.Syntax.Elements] --|> [ArchUnitNET.Fluent.Predicates]
[ArchUnitNET.Fluent.Syntax.Elements] --|> [ArchUnitNET.Fluent.Exceptions]
[ArchUnitNET.Fluent.Syntax.Elements] --|> [ArchUnitNET.Fluent.Conditions]
[ArchUnitNET.Fluent.Syntax.Elements] --|> [ArchUnitNET.Domain.Extensions]
[ArchUnitNET.Fluent.Syntax.Elements] --|> [ArchUnitNET.Domain.Exceptions]
[ArchUnitNET.Fluent.Slices] --|> [ArchUnitNET.Domain.Dependencies]
[ArchUnitNET.Fluent.Predicates] -[#red]> Domain
[ArchUnitNET.Fluent.PlantUml] --|> [ArchUnitNET.Domain.PlantUml.Export]
[ArchUnitNET.Fluent.Freeze] --|> [ArchUnitNET.Domain.Exceptions]
[ArchUnitNET.Fluent.Extensions] --|> [ArchUnitNET.Domain.Extensions]
[ArchUnitNET.Fluent.Conditions] --|> [ArchUnitNET.Fluent.Predicates]
[ArchUnitNET.Fluent.Conditions] -[#red]> Domain
[ArchUnitNET.Domain.PlantUml.Import] --|> [ArchUnitNET.Domain.PlantUml.Exceptions]
[ArchUnitNET.Domain.PlantUml.Import] --|> [ArchUnitNET.Domain.Extensions]
[ArchUnitNET.Domain.PlantUml.Export] --|> [ArchUnitNET.Domain.PlantUml.Exceptions]
[ArchUnitNET.Domain.PlantUml.Export] --|> [ArchUnitNET.Domain.Extensions]
[ArchUnitNET.Domain.PlantUml.Export] --|> [ArchUnitNET.Domain.Dependencies]
[ArchUnitNET.Domain.Extensions] --|> [ArchUnitNET.Domain.Exceptions]
[ArchUnitNET.Domain.Extensions] --|> [ArchUnitNET.Domain.Dependencies]
@enduml
